version: '3.8'
services:


  db-puja:
    image: mysql:8.0.33
    container_name: db-puja
    environment:
      MYSQL_DATABASE: DBPuja
      MYSQL_USER: Leonispe
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3307:3306
    networks:
      - subasta-net



  db-service:
    container_name: db-service
    image: mysql:8.0.33
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: DBService
      MYSQL_USER: Leonispe
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3308:3306
    expose:
      - 3306
    networks:
      - subasta-net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 10









  db-historial:
      container_name: db-historial
      image: mysql:8.0.33
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: DBHistorial
        MYSQL_USER: Leonispe
        MYSQL_PASSWORD: 1234
        MYSQL_ROOT_PASSWORD: root
      ports:
        - 3310:3306
      expose:
        - 3306
      networks:
        - subasta-net
      healthcheck:
        test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
        interval: 10s
        timeout: 5s
        retries: 5







  db-notification:
      container_name: db-notificacion
      image: mysql:8.0.33
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: DBnotification
        MYSQL_USER: Leonispe
        MYSQL_PASSWORD: 1234
        MYSQL_ROOT_PASSWORD: root
      ports:
        - 3312:3306
      expose:
        - 3306
      networks:
        - subasta-net


  db-usuario:
     container_name: db-usuario
     image: mysql:8.0.33
     restart: unless-stopped
     environment:
      MYSQL_DATABASE: DBusuario
      MYSQL_USER: Leonispe
      MYSQL_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: root
     ports:
          - 3315:3306
     expose:
          - 3306
     networks:
          - subasta-net








  mongo-product:
      image: mongo:6.0
      container_name: mongo-product
      restart: unless-stopped
      ports:
        - "27018:27017"
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: rootpass
      volumes:
        - ./mongo-init:/docker-entrypoint-initdb.d
      networks:
        - subasta-net









  db-keycloak:
      container_name: db-keycloak
      image: mysql:8.0
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: db_keycloak
        MYSQL_USER: Leonispe
        MYSQL_PASSWORD: 1234
        MYSQL_ROOT_PASSWORD: 1234
      ports:
        - "3305:3306"
      expose:
        - "3306"
      networks:
        - subasta-net



  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:21.0.2
    command: [ "start-dev" ]
    ports:
      - 8181:8181
    expose:
      - 8181
    depends_on:
      - db-keycloak
    environment:
      DB_VENDOR: mysql
      DB_ADDR: db-keycloak
      DB_DATABASE: db_keycloak
      DB_PORT: 3306
      DB_USER: Leonispe
      DB_PASSWORD: 1234
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8181
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME: localhost
    networks:
      - subasta-net
    volumes:
      - "C:/Users/juanc/.m2:/root/.m2"



  zookeeper:
      container_name: zookeeper-subasta
      image: confluentinc/cp-zookeeper:7.4.0
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      networks:
        - subasta-net



  kafka:
      container_name: kafka-subasta
      image: confluentinc/cp-kafka:7.4.0
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      networks:
        - subasta-net





  notificacion:
    build:
      context: .
      dockerfile: Subasta-notificacion/Subasta-notificacion/Dockerfile-notificacion
    ports:
      - "8082:8082"
    networks:
      - subasta-net
    volumes:
      - ~/.m2:/root/.m2





  subasta-producto:
    build:
      context: .
      dockerfile: Subasta-producto/Subasta-producto/Dockerfile-producto
    ports:
      - "8083:8083"
    networks:
      - subasta-net
    volumes:
      - ~/.m2:/root/.m2



  subasta-puja:
    build:
      context: .
      dockerfile: Subasta-puja/Subasta-puja/Dockerfile-puja
    ports:
      - "8084:8084"
    networks:
      - subasta-net
    volumes:
      - ~/.m2:/root/.m2




  subasta-service:
    build:
      context: ./Subasta-service/Subasta-service
      dockerfile: Dockerfile-service
    ports:
      - "8085:8085"
    networks:
      - subasta-net
    volumes:
      - "C:/Users/juanc/.m2:/root/.m2"
    depends_on:
      db-service:
        condition: service_healthy




  subasta-historial:
    build:
      context: .
      dockerfile: Subasta-historial/Subasta-historial/Dockerfile-historial
    container_name: subasta-historial
    depends_on:
      db-historial:
        condition: service_healthy
    volumes:
      - ~/.m2:/root/.m2
    ports:
      - "8089:8089"
    networks:
      - subasta-net





  api-gateway:
    build:
      context: .
      dockerfile: Subasta-gateway/Subasta-gateway/Dockerfile-gateway
    container_name: api-gateway
    volumes:
      - ~/.m2:/root/.m2
    ports:
      - "8080:8080"
    networks:
      - subasta-net




  eureka-server:
    build:
      context: .
      dockerfile: Subasta-eureka/Subasta-eureka/Dockerfile-eureka
    ports:
      - "8761:8761"
    networks:
      - subasta-net
    volumes:
      - ~/.m2:/root/.m2



networks:
    subasta-net:
      driver: bridge



